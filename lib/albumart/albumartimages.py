# Image collection for project 'albumart'.
#
# Generated from reading image files: 
#      ../../share/albumart/nocover.png
#
# Created: la helmi  26 16:52:36 2005
#      by: The PyQt User Interface Compiler (pyuic) 3.13
#
# WARNING! All changes made in this file will be lost!


from qt import QImage, QMimeSourceFactory, qUncompress


# ../../share/albumart/nocover.png
image_0_data = \
    "\x00\x00\x40\x00\x78\x9c\xed\x9b\xc9\x4f\x23\x47\x14\xc6" \
    "\xad\x24\x97\x44\xc9\x35\x08\x14\x92\x43\x72\xcb\x81\x48" \
    "\x1c\xd9\x8c\x72\xcd\x21\x93\x70\xcb\x3f\x90\x1c\x22\x21" \
    "\xe5\x30\x73\xe3\x00\x12\x20\x23\x24\x84\xc1\xc0\x80\xc1" \
    "\x36\xb2\x81\xb1\x10\x3b\x88\x4d\x42\xe2\x0c\x5c\x58\x24" \
    "\x2e\xec\xfb\xbe\x83\x0d\x9d\xfa\x2a\x54\xa7\x68\xdc\xee" \
    "\x6a\xbb\xbb\xdd\x96\xa6\xa4\x4f\x3d\x92\x19\x77\xfd\xea" \
    "\x7b\x55\xef\x55\x75\xdb\xe1\xf8\xbf\xb5\xb7\xb7\xff\x19" \
    "\x08\x04\x42\x7e\xbf\x3f\xc0\xe4\xf3\xf9\x64\x91\xcf\xa9" \
    "\xbc\x5e\xaf\xac\xd6\xd6\xd6\x40\x4b\x4b\xcb\x0b\x35\x37" \
    "\x37\x53\x79\x3c\x1e\x59\x8d\x8d\x8d\xb2\xdc\x6e\xf7\x2b" \
    "\xd5\xd7\xd7\xcb\xaa\xab\xab\x93\x55\x5b\x5b\xfb\x42\x35" \
    "\x35\x35\xb2\x5c\x2e\xd7\x0b\x55\x57\x57\x53\x55\x55\x55" \
    "\xbd\x50\x65\x65\x65\x67\x45\x45\x45\xa0\xb4\xb4\xf4\x47" \
    "\x47\x9c\xf6\x81\xb4\xd3\xd3\x53\xe9\xe2\xe2\x42\x3a\x3f" \
    "\x3f\x7f\xa5\xb3\xb3\xb3\x98\xc2\xff\x11\xd5\xc9\xc9\x89" \
    "\xaa\x8e\x8f\x8f\x55\x75\x74\x74\xa4\xaa\xc3\xc3\xc3\xb8" \
    "\xc2\x7d\x67\x67\x67\xa5\x92\x92\x92\x3f\x08\xe6\x27\x71" \
    "\xf8\xc3\x8f\x8f\x8f\x92\xd5\xed\xe9\xe9\x89\x0a\xf7\x86" \
    "\xa2\xd1\xa8\x7c\x85\x22\x91\x08\xd5\xc3\xc3\x03\xd5\xfd" \
    "\xfd\xbd\xac\xbb\xbb\x3b\xaa\xdb\xdb\x5b\xaa\x9b\x9b\x1b" \
    "\xaa\xeb\xeb\x6b\xaa\xab\xab\x2b\x7a\x8f\x85\x85\x05\xc9" \
    "\xe9\x74\xfe\x43\x30\xbf\x50\xe3\xef\xe9\xe9\x09\xe3\x3e" \
    "\x56\x72\xc6\xe3\xd3\x62\x63\x7c\xd0\xe5\xe5\x25\x8d\x5b" \
    "\x3e\x76\x59\x6c\xe2\xbb\xe7\xe6\xe6\xa4\xc2\xc2\xc2\xb7" \
    "\x04\xf3\x4b\x3b\xf2\xab\xb1\x6b\x79\xcb\xd8\x8d\xe0\xef" \
    "\xee\xee\x36\x8d\x5f\x8d\x5d\x8b\x5f\xd4\x7b\xc6\xaf\x5c" \
    "\xaf\xec\xce\x6f\xa6\xf7\x76\xe1\x37\x7a\xde\x2b\xd9\x95" \
    "\xfc\x7c\x6e\x42\x5e\xc1\xbd\x44\xf8\x43\xa1\x90\xe1\xfc" \
    "\x4a\x76\x35\xfe\x64\xe3\x5e\xcd\x7b\xf0\xe3\x9e\x76\xe1" \
    "\x17\x61\x4f\x24\xee\x63\x79\x0f\x7e\xd4\x0e\xa2\xf1\x1f" \
    "\x0c\x06\x0d\xe5\xd7\x5a\xf3\xcc\xf6\x1e\xd7\x83\x83\x03" \
    "\xfa\xdd\x76\xe2\x8f\x35\xef\x8d\xf0\x9e\x5f\xf3\x19\xff" \
    "\xce\xce\x0e\xfd\xce\xf9\xf9\x79\x4b\xf9\x45\xbd\x57\xf2" \
    "\x1b\xe5\x3d\x9b\xfb\x1b\x1b\x1b\xf4\xfb\xed\xc2\x6f\xb4" \
    "\xf7\x6a\xec\x10\x6a\xff\xb5\xb5\x35\x61\xfe\xce\xce\xce" \
    "\x30\xfa\x64\x36\xbb\x5e\xef\xb5\xf2\x9d\x1a\x3f\x62\xdf" \
    "\x6a\x7e\xd1\x7c\xa7\x5c\xf7\x94\xec\x89\x78\xcf\xf3\x63" \
    "\x5f\xb8\xb9\xb9\x29\xad\xaf\xaf\xd3\x7b\x89\xf0\x93\xbd" \
    "\xbf\xe1\xfc\x46\xd7\x3a\x6a\x6b\x9e\x72\xde\xef\xed\xed" \
    "\xd1\xb9\x6f\x25\xbf\xde\x35\x4f\xcd\xfb\x44\xd6\x3c\xa5" \
    "\xf7\x5b\x5b\x5b\xd4\x7f\x8c\x01\xee\x27\x92\xff\xcc\xe2" \
    "\xb7\xd2\x7b\x08\xde\x83\x9d\x8d\x81\x15\xfc\x89\x7a\xcf" \
    "\xf8\x8d\xf2\x1e\x6b\xfe\xf6\xf6\x36\x65\xb7\x03\xbf\x16" \
    "\xbb\x1a\x7f\xa2\xf3\x1e\x6b\x3e\xf8\x99\x30\x06\xa2\xf5" \
    "\xaf\xcf\xe7\x4b\x88\xdf\x2e\xde\xa3\xd6\xe5\xd9\x53\xcd" \
    "\x6f\xa5\xf7\x88\x7b\x78\xaf\x14\xc6\xc0\x4c\xfe\x64\xbd" \
    "\x67\xfc\xc9\x78\x8f\x3d\xde\xee\xee\xae\xad\xf8\x45\xbd" \
    "\x57\xf2\xeb\xf5\x9e\xe5\x7a\xf0\xc7\x12\xc6\x40\xf4\xfc" \
    "\xa3\xa3\xa3\x43\x17\x7f\xaa\xbd\x07\x3b\xe6\xbc\x1a\x7b" \
    "\xaa\xf8\xad\xf2\x1e\xec\xf0\x3e\x9e\x30\x06\x66\xf0\x1b" \
    "\xe5\x7d\x22\x75\x3e\xf3\x7d\x7f\x7f\x5f\x53\x18\x03\x51" \
    "\x7e\xaf\xd7\x9b\x34\xbf\xd1\xde\xc7\x3a\xcf\x16\x65\x37" \
    "\x8b\x5f\xef\xfe\x56\xcb\x7b\xc6\xae\xe5\x3d\x7c\x47\x9e" \
    "\x03\xbf\xa8\x30\x06\x66\xf0\x5b\x1d\xf7\xc8\x71\x7a\xd9" \
    "\xf5\xf2\xb7\xb5\xb5\x85\xd1\x5f\x2b\xe2\x5e\xc9\xaf\xb6" \
    "\xe6\xb1\xfd\x9c\xd6\x33\x5e\x35\x61\x0c\x44\xcf\xbf\xb5" \
    "\xf8\xcd\x66\x57\x7a\x8f\x78\x8f\xf7\xdc\x5b\x44\x18\x03" \
    "\x33\xf8\x8d\x88\xfb\x58\xde\x1b\xc5\xcd\x4b\x94\xff\xfd" \
    "\xfb\xf7\x94\x1f\x7d\x41\xbf\xc0\x04\xde\x78\xfc\xc9\x78" \
    "\xcf\xf3\x83\x9d\xd5\xb2\x46\x4b\x2f\x3f\xfa\x82\x71\x83" \
    "\x0f\xf0\x03\x7d\x06\x1b\x7f\xa6\xc7\xc6\x20\x19\x7e\x70" \
    "\xb3\x75\xdd\x0c\xee\x44\xf9\xd1\x2f\xe5\x7b\x29\xb8\xa2" \
    "\xaf\xf8\x0c\x7d\x07\x0f\xfe\x96\x71\x6b\x9d\x67\x33\x5e" \
    "\x8c\x2d\x5f\xbb\x5b\x21\xc4\xac\x08\x7f\x4b\x4b\x4b\x4c" \
    "\x7e\x35\xf1\xcf\x59\xa0\x58\xef\x0b\x89\xbe\xfb\x63\x37" \
    "\x7e\x3d\xef\x34\xd9\x5d\x7a\xf9\xb1\x26\xa9\xbd\xeb\x95" \
    "\x8e\x12\xe5\x6f\x6a\x6a\xfa\xc8\x4f\xf8\xb1\x56\xc5\x7a" \
    "\xff\x2f\x5d\x85\xf6\x91\x5f\x9b\xdf\xe3\xf1\x50\x7e\xe4" \
    "\x68\xbe\x0e\x4f\xb5\xac\xe4\x47\xce\xb6\x13\x3f\x72\x11" \
    "\xce\x70\x56\x57\x57\xa5\x95\x95\x15\x69\x79\x79\x59\xd6" \
    "\xd2\xd2\x92\xac\xc5\xc5\x45\x55\xe1\x19\xd8\xcc\xcc\x8c" \
    "\x54\x54\x54\xf4\x4e\x84\x1f\xf5\x0a\xbf\x27\x49\xa5\xb0" \
    "\x16\x83\x7f\x7a\x7a\x5a\x9a\x9c\x9c\x94\xaf\xe3\xe3\xe3" \
    "\xd2\xd8\xd8\x98\x34\x3c\x3c\x2c\x0d\x0d\x0d\x49\xfd\xfd" \
    "\xfd\x52\x5f\x5f\xdf\x2b\x0d\x0c\x0c\xd0\xbf\x71\xb9\x5c" \
    "\x91\xdc\xdc\xdc\xbf\x09\xe6\x57\xe9\xc8\x3f\x35\x35\x45" \
    "\x63\x99\xdf\x7f\x2a\x9f\xb3\x2b\xc5\xda\xc8\xc8\x48\xa4" \
    "\xb8\xb8\xb8\x8b\x20\xfe\xec\x88\xf3\xfe\x6f\x43\x43\x83" \
    "\xcc\xcf\x9f\xc9\xa4\x52\x58\x8b\x71\x86\x35\x31\x31\x41" \
    "\x73\x19\xff\x7e\x34\xbf\x37\x53\x6b\x84\x3d\x9a\x9f\x9f" \
    "\xdf\x4d\xf0\xde\x10\x7d\xe3\x88\xf3\xfe\xb7\x5d\xf9\x71" \
    "\x86\x83\x78\x47\x2d\xc7\xf6\x18\xb8\x62\xdf\xc5\xf6\xa1" \
    "\x7c\x4c\xb0\x46\xe2\x3e\x4a\xe6\x7c\x0f\x41\xfb\x8d\xe8" \
    "\x5b\xa2\x4f\xd5\xd8\xd1\xdc\x6e\x77\x98\xed\x5b\xf8\x3d" \
    "\x6a\x2a\x85\xb5\x18\x67\x38\x98\xeb\xd8\x87\xf1\x7b\x2a" \
    "\xfc\x5b\xb9\x07\xc3\x58\x60\x0c\xc8\x9a\x10\x79\xf6\xfd" \
    "\x77\xa2\xec\x78\xbe\xa7\x03\xff\xe8\xe8\x28\xdd\x93\xb3" \
    "\x33\x03\xfe\x73\x36\x1e\x18\x0b\xc4\x00\x61\x8f\x92\x5c" \
    "\xf7\xe1\xd9\x77\x21\x76\x9e\x9f\xd5\x00\x76\x10\xb8\x70" \
    "\x86\x85\x35\x1c\x57\x56\x0f\xb0\xdc\xc8\xc4\xce\x28\x06" \
    "\x07\x07\x23\xcf\xec\xc2\xbe\xa7\x03\x3f\x72\x1c\xd6\x01" \
    "\x7e\x5f\xc7\xea\x7b\x8c\x05\xfe\x8e\xe4\x3a\xcc\x77\x16" \
    "\xf3\x9a\xf3\x5d\x8d\x1f\xe3\xc8\x62\x2a\xd5\x42\x7f\x10" \
    "\xf7\xc8\xe3\xc8\x03\xec\xb7\x40\xec\x6c\x07\xe3\x00\xff" \
    "\x49\xae\x8f\x3a\x9d\x4e\xe6\xbb\x6e\x76\x3b\xf3\x83\x13" \
    "\xfc\xa8\x03\x10\x03\xec\x6c\x9f\xfd\xb6\xa9\xb7\xb7\x97" \
    "\xcd\xf7\x12\xa2\xef\x12\x61\xe7\xf9\x91\x57\xf8\x33\xac" \
    "\x54\x0a\x73\x11\x67\x38\xe0\xc7\xb3\x5c\xf6\x4c\x17\xb1" \
    "\x80\x38\xe0\xd8\x13\xf6\x3d\x9d\xf8\xd9\x7b\x2d\xe0\x0f" \
    "\x87\xc3\x86\xb1\xa7\x03\x3f\xb8\xf1\x3e\x17\xae\x5d\x5d" \
    "\x5d\xac\xae\x13\xaa\x6d\xf4\xf0\xa3\x86\xe0\x7f\x63\x97" \
    "\x4a\x61\x2d\xc2\x1c\x27\x79\x8d\x72\x63\x2f\x17\x0a\x85" \
    "\xc0\x8e\x7a\xfe\x8d\x51\xec\x76\xe7\x47\xfe\xc3\xdc\x0f" \
    "\x06\x83\x91\xbc\xbc\x3c\xc6\x9e\x6d\x14\x3b\x1a\xa9\xff" \
    "\x7b\xc1\x6e\xb7\x86\x7a\x8f\xec\x63\x24\xbf\xdf\x1f\x2d" \
    "\x28\x28\x08\x91\xae\xfe\xea\xd0\x59\xdb\x88\xb4\xb2\xb2" \
    "\xb2\x56\x9f\xcf\x77\x4d\xee\x73\x41\xae\xb6\x91\xd7\xeb" \
    "\xbd\x28\x2f\x2f\x3f\x7f\x8e\x79\xb0\xc7\xdd\xc7\x25\xda" \
    "\x72\x72\x72\x7e\xca\xce\xce\xfe\x2b\x23\x23\xe3\x6d\x66" \
    "\x66\xa6\x9d\xf4\x2e\x2b\x2b\x0b\xbf\xdd\xfd\xc5\x2c\xf6" \
    "\xe7\xf6\xb9\xe3\xbf\xb8\xfa\xc1\x86\xfa\x9e\xe8\x6b\xa2" \
    "\xcf\x8c\x04\xfe\x17\x2a\xf5\xf5\x9c"

embed_image_vec = [
    [64,64,32,image_0_data,1577,0,None,1,"nocover.png"],
]


def uic_findImage(name):
    global embed_image_vec

    for (w,h,depth,data,comp,nrCol,colTab,alpha,iname) in embed_image_vec:
        if iname == str(name):
            data = qUncompress(data).data()
            img = QImage(data,w,h,depth,colTab,nrCol,QImage.BigEndian).copy()

            if alpha:
                img.setAlphaBuffer(1)

            return img

    return QImage()


class MimeSourceFactory_albumart(QMimeSourceFactory):
    def __init__(self):
        QMimeSourceFactory.__init__(self)

    def data(self,abs_name):
        d = QMimeSourceFactory.data(self,abs_name)
        if d or abs_name.isNull():
            return d

        img = uic_findImage(abs_name)
        if not img.isNull():
            self.setImage(abs_name,img)

        return QMimeSourceFactory.data(self,abs_name)


factory = None

def qInitImages_albumart():
    global factory

    if factory is None:
        factory = MimeSourceFactory_albumart()
        QMimeSourceFactory.defaultFactory().addFactory(factory)


def qCleanupImages_albumart():
    global factory

    if factory is not None:
        QMimeSourceFactory.defaultFactory().removeFactory(factory)
        factory = None


class StaticInitImages_albumart:
    def __init__(self):
        self.cleanup = qCleanupImages_albumart
        qInitImages_albumart()

    def __del__(self):
        self.cleanup()


staticImages = StaticInitImages_albumart()
